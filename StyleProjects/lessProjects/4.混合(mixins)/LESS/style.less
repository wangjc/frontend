//基本混合
//.font_hn{
//color: red;
//font-family: microsoft yahei, "黑体", Arial, Simsun, "Arial Unicode MS", Mingliu, Helvetica;
//}
//h1{
//font-size: 28px;
//.font_hn;
//}
//h2{
//font-size: 24px;
//.font_hn;
//}
////不带输出的混合，类名后面使用()
//.font_hn(){
//color: red;
//font-family: microsoft yahei, "黑体", Arial, Simsun, "Arial Unicode MS", Mingliu, Helvetica;
//}
//h1{
//font-size: 28px;
//.font_hn;
//}
//h2{
//font-size: 24px;
//.font_hn;
//}

//带选择器的混合
//.my-hover-mixin {
//&:hover {
//  border: 1px solid red;
//}
//}
//button {
//.my-hover-mixin();
//}
//h1{
//.my-hover-mixin();
//}

//带参数的混合
//.border(@color){
//border: 1px solid @color;
//}
//h1{
//&:hover{
//  .border(green);
//}
//}
//h2{
//&:hover{
//  .border(#000);
//}
//}
/*带参数并且有默认值的混合*/
//带参数并且有默认值的混合
//.border_you(@color:red){
//border: 1px solid @color;
//}
//h1{
//&:hover{
//  .border_you();
//}
//}
//h2{
//&:hover{
//  .border_you(yellow);
//}
//}
/*带多个参数的混合*/
//带多个参数的混合
//.mixin_1(@color; @padding:xxx; @margin: 2) {
//  color-3: @color;
//  padding-3: @padding;
//  margin: @margin @margin @margin @margin;
//}
//
//.divmaizi{
//  .mixin_1(red;)
//}
//
//
//.divmaizi {
//  .mixin_1(1,2,3;something, ele;132);
//}
//.divmaizi {
//  .mixin_1(1,2,3);
//}
//.divmaizi {
//.mixin_1(1,2,3;);
//}

//如果传参的括号里面全部都是以“，”分割，那么会依次传给各个参数值，
//如果传参的括号里面既有“，”又有“；”那么，会把“；”前面的看作一个整体，传给一个参数值

/*定义多个具有相同名称和参数数量的混合*/
//.mixin_2(@color) {
//  color-1: @color;
//}
//.mixin_2(@color; @padding:2) {
//  color-2: @color;
//  padding-2: @padding;
//}
//.mixin_2(@color; @padding; @margin: 2) {
//  color-3: @color;
//  padding-3: @padding;
//  margin: @margin @margin @margin @margin;
//}
//
//.some .selector div {
//  .mixin_2(#008000);
//}
//结论：把所有匹配的混合组装成一个整体。

//命名参数
/*命名参数*/
//
//.mixin(@color: black; @margin: 10px; @padding: 20px) {
//color: @color;
//margin: @margin;
//padding: @padding;
//}
//
//.class1 {
//.mixin(@margin: 20px; @color: #33acfe);
//}
//.class2 {
//.mixin(#efca44; @padding: 40px);
//}
//.class3{
//.mixin(@padding: 80px;)
//}

/*@arguments;*/
//.border(@x:solid,@c:red){
//border: 21px @arguments;
//}
//.div1{
//.border(dot);
//} 
//pattern-matching
//.border(all,@w:5px){
//border-radius: @w;
//}
//.border(t_l,@w:5px){
//border-top-left-radius: @w;
//}
//.border(t_r,@w:5px){
//border-top-right-radius: @w;
//}
//.border(b-l,@w:5px){
//border-bottom-left-radius: @w;
//}
//.border(b-r,@w:5px){
//border-bottom-right-radius: @w;
//}

//.border(@_; @color) {
//background: #33acfe;
//}
//footer{
//.border(t_l,10px);
//.border(b-r,10px);
//}

//.mixin(@a) {
//color: @a;
//}
//.mixin(@a; @b) {
//color:@a;
//margin:@b;
//}
//.c1 {
//  .mixin(#eee);
//  .mixin(red;0.5);
//}


////混合的返回值，有点函数的怪味道
//.2params(@x, @y) { //定义函数
//@average: ((@x + @y) / 2);  //返回值
//@sum:(@x + @y);   //返回值
//}
//
//div {
//.2params(16px, 50px); //调用函数
//padding: @average;
//margin: @sum;
//}

//我认为是条件匹配
//.mixin(dark; @color) {
//color: darken(@color, 10%);
//}
//.mixin(light; @color) {
//color: lighten(@color, 10%);
//}
//.mixin(@_; @color) {
//display: block;
//}
//
//@switch: light;
//.class {
//.mixin(@switch; #888);
//}
